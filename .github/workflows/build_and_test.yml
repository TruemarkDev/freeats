name: Build and test

on: push

env:
  CI: 1
  RAILS_ENV: test
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  # Use 172.17.0.1 when runs-on is self-hosted
  # Use localhost when runs-on is ubuntu, a GitHub hosted runner
  # Use postgres otherwise
  DATABASE_HOST: 172.17.0.1
  # This username is required for the postgres service to work without errors
  DATABASE_USERNAME: postgres
  # PGPASSWORD is passed directly to libpq, not referenced within Rails app
  PGPASSWORD: postgres

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: self-hosted
    services:
      postgres:
        image: postgres:14.9
        env:
          POSTGRES_PASSWORD: ${{ env.PGPASSWORD }}
        ports:
          # Will assign a random free host port
          - 5432/tcp
        # User needs to be set to postgres for this to work without errors
        # Healthcheck needed because the postgres container does not provide a healthcheck
        options: --user postgres --health-cmd pg_isready --health-interval 1s --health-timeout 1s --health-retries 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ats:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            RAILS_ENV=${{ env.RAILS_ENV }}
            RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Set up Docker env file
        run: |
          cat << EOF > docker.env
          CI=${{ env.CI }}
          RAILS_ENV=${{ env.RAILS_ENV }}
          DATABASE_HOST=${{ env.DATABASE_HOST }}
          DATABASE_USERNAME=${{ env.DATABASE_USERNAME }}
          PGPASSWORD=${{ env.PGPASSWORD }}
          PGPORT=${{ job.services.postgres.ports[5432] }}
          EOF

      - name: Create test DBs
        run: |
          docker run --rm --env-file docker.env ats:latest /bin/bash -c \
          "for i in $(seq 0 $(($(nproc)-1))); do createdb -h $DATABASE_HOST -U $DATABASE_USERNAME -p $PGPORT ats_test-$i; done"

      - name: Create DB
        run: |
          docker run --rm --env-file docker.env ats:latest /bin/sh -c \
          "bin/rails db:create db:schema:load"

      - name: Run tests
        run: |
          docker run --rm --env-file docker.env ats:latest /bin/sh -c \
          "bundle exec rails test"
