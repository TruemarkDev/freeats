name: Build and test

on: push

jobs:
  build:
    runs-on: namespace-profile-default
    services:
      postgres:
        image: postgres:14.9
        env:
          POSTGRES_USER: ats
          POSTGRES_PASSWORD: ats
          POSTGRES_DB: ats
        ports:
          # Will assign a random free host port.
          - 5432/tcp
        # Needed because the postgres container does not provide a healthcheck.
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Ruby 3.3.3
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.3
          bundler-cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      # Required to compile pg ruby gem.
      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install libpq-dev -y
          sudo apt-get install postgresql-client -y

      # Required for processing images.
      - name: Install libvips library
        run: |
          sudo apt-get install libvips -y

      - name: Get yarn cache directory
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Restore yarn cache
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            public
            node_modules
            app/assets/builds
          key: ${{ runner.os }}-yarn3-${{ hashFiles('**/yarn.lock', '**/esbuild.config.js') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v1

      - name: Install Ruby bundler
        run: gem install bundler

      - name: Build Ruby dependencies
        run: |
          bundle config path vendor/bundle # path should be same as in caching step
          bundle install --jobs 4 --retry 3

      - name: Build JavaScript dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Compile assets
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        env:
          RAILS_ENV: test
        run: |
          yarn build
          yarn build:css

      - name: Create DB
        env:
          # Use localhost for the host here because we have specified a container for the job.
          # If we were running the job on the VM this would be postgres.
          PGHOST: localhost
          PGUSER: ats
          PGPASSWORD: ats
          PGPORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
          RAILS_ENV: test
        run: |
          bin/rails db:create db:schema:load

      - run: bundle exec rails test
        env:
          PGHOST: localhost
          PGUSER: ats
          PGPASSWORD: ats
          PGPORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
          RAILS_ENV: test
          CI: 1
          RAILS_MASTER_KEY: "e1223b7c2186ddb83584ed06238e0d06"

      - run: bundle exec rails test:system
        env:
          PGHOST: localhost
          PGUSER: ats
          PGPASSWORD: ats
          PGPORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
          RAILS_ENV: test
          CI: 1
          RAILS_MASTER_KEY: "e1223b7c2186ddb83584ed06238e0d06"

      - run: yarn eslint .
      - run: yarn prettier -c .
