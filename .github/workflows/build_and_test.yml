name: Build and test

on: push

env:
  # Use 172.17.0.1 when runs-on is self-hosted
  # Use localhost when runs-on is ubuntu, a GitHub hosted runner
  # Use postgres otherwise
  DATABASE_HOST: 172.17.0.1
  # This username is required for the postgres service to work without errors
  DATABASE_USERNAME: postgres
  # PGPASSWORD is passed directly to libpq, not referenced within Rails app
  PGPASSWORD: postgres
  RAILS_ENV: test
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  CI: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: self-hosted
    services:
      postgres:
        image: postgres:14.9
        env:
          POSTGRES_PASSWORD: ${{ env.PGPASSWORD }}
        ports:
          # Will assign a random free host port
          - 5432/tcp
        # User needs to be set to postgres for this to work without errors
        # Healthcheck needed because the postgres container does not provide a healthcheck
        options: --user postgres --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Ruby 3.3.3
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.3
          bundler-cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      # Needed for self-hosted runner
      - name: Install Yarn
        run: npm install -g yarn

      - name: Update Ubuntu package index
        run: sudo apt-get update

      # Required to compile Ruby gems
      - name: Install Ubuntu packages
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: postgresql-client libvips libpq-dev
          version: 3.0

      - name: Get yarn cache directory
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Restore yarn cache
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            public
            node_modules
            app/assets/builds
          key: ${{ runner.os }}-yarn3-${{ hashFiles('**/yarn.lock', '**/esbuild.config.js') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v1

      - name: Install Ruby bundler
        run: gem install bundler

      - name: Build Ruby dependencies
        # Path should be same as in caching step
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Build JavaScript dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Compile assets
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn build
          yarn build:css

      - name: Create DB
        run: bin/rails db:create db:schema:load
        env:
          PGPORT: ${{ job.services.postgres.ports[5432] }}

      - run: bundle exec rails test
        env:
          PGPORT: ${{ job.services.postgres.ports[5432] }}

      - run: bundle exec rails test:system
        env:
          PGPORT: ${{ job.services.postgres.ports[5432] }}

      - run: yarn eslint .
      - run: yarn prettier -c .
