// ButtonComponent styles
.btn {
  &-light {
    --bs-btn-color: var(--bs-gray-900);
  }

  &-small {
    --bs-btn-font-size: 12px;
    --bs-btn-padding-x: 8px;
    --bs-btn-padding-y: 4px;
  }

  &-medium {
    --bs-btn-font-size: 14px;
    --bs-btn-padding-x: 9px;
    --bs-btn-padding-y: 4.5px;
  }

  &-large {
    --bs-btn-font-size: 16px;
    --bs-btn-padding-x: 14px;
    --bs-btn-padding-y: 7px;
  }
}

// TextInputComponent styles
.text-input-component {
  &-default {
    border-radius: 4px;
    border-color: $gray-500;
  }

  &-default::placeholder {
    color: $gray-600;
  }

  &-default:focus {
    border-color: tint-color($blue, 50%);
  }

  &-disabled {
    background-color: $gray-200;
  }

  &-disabled:focus {
    background-color: $gray-200;
  }

  &-subscript {
    color: $gray-600;
    font-size: 12px;
    line-height: 1.5;
  }

  &-small {
    padding: 4.5px 9px;
    font-size: 14px;
    padding: 4px 8px;
    font-size: 12px;
  }

  &-medium {
    padding: 4.5px 9px;
    font-size: 14px;
  }

  &-large {
    padding: 7px 14px;
    font-size: 16px;
  }
}

// LabelComponent styles
.label-component {
  $sizes:
    small 14px,
    medium 16px,
    large 18px;

  @each $name, $size in $sizes {
    &-#{$name} {
      font-size: $size !important;
      line-height: 1.5 !important;
    }
  }
}

// PrettyNumberComponent styles
.pretty-number-component {
  &:after {
    content: "\00a0";
  }
}

// SelectComponent styles
.select-component {
  --space_for_chevron: 10px;

  // Bootstrap 5 does not support the `btn-group-xs` size.
  // Used in case of a select component with the `dropdown_buttons` plugin for the `selectize` library.
  .btn-group-xs button {
    --bs-btn-font-size: 12px;
    --bs-btn-padding-x: 8px;
    --bs-btn-padding-y: 4px;
  }

  .selectize-input {
    border-radius: 4px !important;
    border-color: $gray-500;
    vertical-align: middle; // Fix the height of the component.

    input::placeholder {
      color: $gray-600;
    }

    &.focus {
      border-color: tint-color($blue, 50%) !important;
    }

    &.locked {
      background-color: $gray-200 !important;
      opacity: 1 !important;
    }

    &.disabled {
      cursor: default !important;

      .item {
        color: $gray-600 !important;
      }
    }

    input {
      @extend .text-truncate;
      cursor: text !important;
    }

    .item {
      color: $gray-900 !important;
    }
  }

  // Do not show the chevron icon when the loading icon is visible.
  &.with-chevron > :not(.loading) > .selectize-input {
    input,
    .item {
      max-width: 100% !important;
    }

    &::before {
      cursor: pointer;
    }

    &::after {
      @extend .fa-light;

      content: fa-content($fa-var-chevron-down) !important;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      right: var(--space_for_chevron);
      color: $gray-900;
    }
  }

  // Start of sizes.
  &.tiny {
    --select_component_font_size: 12px;
    --select_component_min_height: 28px;

    .selectize-input {
      min-height: var(--select_component_min_height) !important;
      padding: 4px 8px !important;
      font-size: var(--select_component_font_size);

      &:before {
        height: var(--select_component_font_size);
        width: var(--select_component_font_size);
      }
    }

    &.with-chevron > :not(.loading) > .selectize-input {
      padding: 4px calc(8px + var(--space_for_chevron)) 4px 8px !important;
    }
  }

  &.small {
    --select_component_font_size: 14px;
    --select_component_min_height: 32px;

    .selectize-input {
      min-height: var(--select_component_min_height) !important;
      padding: 4.5px 9px !important;
      font-size: var(--select_component_font_size);

      &:before {
        height: var(--select_component_font_size);
        width: var(--select_component_font_size);
      }
    }

    &.with-chevron > :not(.loading) > .selectize-input {
      padding: 4.5px calc(9px + var(--space_for_chevron)) 4.5px 9px !important;
    }
  }

  &.medium {
    --select_component_font_size: 16px;
    --select_component_min_height: 40px;

    .selectize-input {
      min-height: var(--select_component_min_height) !important;
      padding: 7px 14px !important;
      font-size: var(--select_component_font_size);

      &:before {
        height: var(--select_component_font_size);
        width: var(--select_component_font_size);
      }
    }

    &.with-chevron > :not(.loading) > .selectize-input {
      padding: 7px calc(14px + var(--space_for_chevron)) 7px 14px !important;
    }
  }

  &.large {
    --select_component_font_size: 18px;
    --select_component_min_height: 48px;

    .selectize-input {
      min-height: var(--select_component_min_height) !important;
      padding: 9.5px 19px !important;
      font-size: var(--select_component_font_size);

      &:before {
        height: var(--select_component_font_size);
        width: var(--select_component_font_size);
      }
    }

    &.with-chevron > :not(.loading) > .selectize-input {
      padding: 9.5px calc(19px + var(--space_for_chevron)) 9.5px 19px !important;
    }
  }
  // End of sizes.

  // Start of types.
  &.single {
    width: 100%;

    .selectize-input {
      // Prevent displaying an additional empty line when selecting the long option.
      overflow: clip;
      white-space: nowrap;

      .item {
        vertical-align: top;
        @extend .text-truncate;
      }
    }
  }

  &.multiple {
    @extend .single;

    // Add an ellipsis if there is more than 1 selected item.
    .selectize-input:has(.item:nth-of-type(2)) {
      text-overflow: ellipsis;
    }

    .item {
      padding: 0 !important;
      margin: 0rem !important;

      background-color: inherit !important;

      &:not(:first-child):before {
        content: ", ";
      }
    }

    .selected:after {
      @extend .fa-light;

      content: fa-content($fa-var-check);
      left: 100%;
      position: sticky;
    }
  }

  &.pill {
    .items {
      display: flex;
      flex-wrap: wrap;
      gap: 4px;
    }

    .item {
      padding-top: 0 !important;
      padding-bottom: 0 !important;
      background-color: $gray-200 !important;
      margin: 0rem !important;
      border-radius: 4px !important;

      .remove {
        border: none !important;
        padding-top: 0 !important;
        padding-bottom: 0 !important;
      }
    }

    .locked .item {
      background-color: white !important;
    }
  }

  &.html {
    .selectize-input {
      .item {
        max-width: 100%;
      }
    }
    @extend .single;
  }
  // End of types.

  // There are no custom styles for the html select component yet.
}

// The select component dropdown could be anchored to the page body.
// In this case we moved the dropdown styles out of the `.select-component` class.
.selectize-dropdown {
  border-radius: 4px;
  box-shadow: none !important;
  color: $gray-900;
  border-color: $gray-500;

  .selected {
    background-color: white;
    color: $gray-900;

    // not disabled options.
    &[data-selectable] {
      background-color: $blue-500;
      color: white;
    }
  }

  .option {
    font-size: var(--select_component_font_size);

    &.active[data-selectable] {
      background-color: $gray-200;
      color: $gray-900;
    }
  }

  .selectize-dropdown-content {
    max-height: 200px;
  }

  .selectize-dropdown-emptyoptionlabel {
    text-align: left;
    height: var(--select_component_min_height);
  }
}
