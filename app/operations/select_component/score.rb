# frozen_string_literal: true

# This logic comes from selectize score function.
class SelectComponent::Score < ApplicationOperation
  include Dry::Monads[:result]

  option :text, Types::Strict::String
  option :query, Types::Strict::String

  def call
    string_for_regex = Regexp.escape(query).chars.map { |letter| DIACRITICS[letter] || letter }.join
    regex = /#{string_for_regex}/i

    index = text.index(regex)
    return Success(0) if index.nil?

    score = query.size / text.size.to_f
    score += 0.5 if index.zero?

    Success(score)
  end

  DIACRITICS = {
    "a" => "[a·∏Ä·∏ÅƒÇƒÉ√Ç√¢«ç«é»∫‚±•»¶»ß·∫†·∫°√Ñ√§√Ä√†√Å√°ƒÄƒÅ√É√£√Ö√•ƒÖƒÑ√ÉƒÖƒÑ]",
    "b" => "[b‚ê¢Œ≤ŒíB‡∏øêåÅ·õí]",
    "c" => "[cƒÜƒáƒàƒâƒåƒçƒäƒãCÃÑcÃÑ√á√ß·∏à·∏â»ª»º∆á∆à…ï·¥ÑÔº£ÔΩÉ]",
    "d" => "[dƒéƒè·∏ä·∏ã·∏ê·∏ë·∏å·∏ç·∏í·∏ì·∏é·∏èƒêƒëDÃ¶dÃ¶∆â…ñ∆ä…ó∆ã∆å·µ≠·∂Å·∂ë»°·¥ÖÔº§ÔΩÑ√∞]",
    "e" => "[e√â√©√à√®√ä√™·∏ò·∏ôƒöƒõƒîƒï·∫º·∫Ω·∏ö·∏õ·∫∫·∫ªƒñƒó√ã√´ƒíƒì»®»©ƒòƒô·∂í…Ü…á»Ñ»Ö·∫æ·∫ø·ªÄ·ªÅ·ªÑ·ªÖ·ªÇ·ªÉ·∏ú·∏ù·∏ñ·∏ó·∏î·∏ï»Ü»á·∫∏·∫π·ªÜ·ªá‚±∏·¥áÔº•ÔΩÖ…ò«ù∆è∆êŒµ]",
    "f" => "[f∆ë∆í·∏û·∏ü]",
    "g" => "[g…¢‚Ç≤«§«•ƒúƒùƒûƒüƒ¢ƒ£∆ì…†ƒ†ƒ°]",
    "h" => "[hƒ§ƒ•ƒ¶ƒß·∏®·∏©·∫ñ·∫ñ·∏§·∏•·∏¢·∏£…¶ ∞«∂∆ï]",
    "i" => "[i√ç√≠√å√¨ƒ¨ƒ≠√é√Æ«è«ê√è√Ø·∏Æ·∏Øƒ®ƒ©ƒÆƒØƒ™ƒ´·ªà·ªâ»à»â»ä»ã·ªä·ªã·∏¨·∏≠∆ó…®…®ÃÜ·µª·∂ñƒ∞iIƒ±…™Ôº©ÔΩâ]",
    "j" => "[j»∑ƒ¥ƒµ…à…â ù…ü ≤]",
    "k" => "[k∆ò∆ôÍùÄÍùÅ·∏∞·∏±«®«©·∏≤·∏≥·∏¥·∏µŒ∫œ∞‚Ç≠]",
    "l" => "[l≈Å≈ÇƒΩƒæƒªƒºƒπƒ∫·∏∂·∏∑·∏∏·∏π·∏º·∏Ω·∏∫·∏ªƒø≈Ä»Ω∆ö‚±†‚±°‚±¢…´…¨·∂Ö…≠»¥ üÔº¨ÔΩå]",
    "n" => "[n≈É≈Ñ«∏«π≈á≈à√ë√±·πÑ·πÖ≈Ö≈Ü·πÜ·πá·πä·πã·πà·πâNÃànÃà∆ù…≤»†∆û·µ∞·∂á…≥»µ…¥ÔºÆÔΩé≈ä≈ã]",
    "o" => "[o√ò√∏√ñ√∂√ì√≥√í√≤√î√¥«ë«í≈ê≈ë≈é≈è»Æ»Ø·ªå·ªç∆ü…µ∆†∆°·ªé·ªè≈å≈ç√ï√µ«™«´»å»ç’ï÷Ö]",
    "p" => "[p·πî·πï·πñ·πó‚±£·µΩ∆§∆•·µ±]",
    "q" => "[qÍùñÍùó †…ä…ãÍùòÍùôqÃÉ]",
    "r" => "[r≈î≈ï…å…ç≈ò≈ô≈ñ≈ó·πò·πô»ê»ë»í»ì·πö·πõ‚±§…Ω]",
    "s" => "[s≈ö≈õ·π†·π°·π¢·π£Íû®Íû©≈ú≈ù≈†≈°≈û≈ü»ò»ôSÃàsÃà]",
    "t" => "[t≈§≈•·π™·π´≈¢≈£·π¨·π≠∆Æ à»ö»õ·π∞·π±·πÆ·πØ∆¨∆≠]",
    "u" => "[u≈¨≈≠…Ñ â·ª§·ª•√ú√º√ö√∫√ô√π√õ√ª«ì«î≈∞≈±≈¨≈≠∆Ø∆∞·ª¶·ªß≈™≈´≈®≈©≈≤≈≥»î»ï‚à™]",
    "v" => "[v·πº·πΩ·πæ·πø∆≤ ãÍùûÍùü‚±± ã]",
    "w" => "[w·∫Ç·∫É·∫Ä·∫Å≈¥≈µ·∫Ñ·∫Ö·∫Ü·∫á·∫à·∫â]",
    "x" => "[x·∫å·∫ç·∫ä·∫ãœá]",
    "y" => "[y√ù√Ω·ª≤·ª≥≈∂≈∑≈∏√ø·ª∏·ªπ·∫é·∫è·ª¥·ªµ…é…è∆≥∆¥]",
    "z" => "[z≈π≈∫·∫ê·∫ë≈Ω≈æ≈ª≈º·∫í·∫ì·∫î·∫ï∆µ∆∂]"
  }.freeze

  private_constant :DIACRITICS
end
