= render "ats/candidates/profile"
  .row
    .col
      #contact-info-card.profile-card
        - if candidate_card_contact_info_has_data?(@candidate)
          = render "shared/profile/info_cards/contact_info_show", candidate: @candidate
        - else
          = card_empty "contact_info", target_model: @candidate
      .profile-card
        - if 1 == 2 # @candidate.cover_letter.present?
          = render "ats/candidates/info_cards/cover_letter_show", candidate: @candidate
        - else
          = card_empty "cover_letter", target_model: @candidate

      / #candidate-info-cv-file
      /   ruby:
      /     confirmation_attributes = {}
      /     delete_modal_data =
      /       {
      /         toggle: "ats-confirmation",
      /         title: "Delete CV?",
      /         content: confirmation_attributes[:content],
      /         btn_cancel_label: "Cancel",
      /         btn_ok_label: "Delete",
      /         btn_ok_class: "btn btn-danger btn-small"
      /       }
      /   - if @candidate.cv.present?
      /     / On mobile devices this text is located at the top of the buttons.
      /     .d-md-none.mt-2
      /       = link_to @candidate.cv.remote_file.name, @candidate.cv.remote_file.file.to_s,
      /                 target: "_blank"
      /       .mt-2 data-bs-toggle="tooltip" title=@candidate.cv.added_event.performed_at.to_fs(:datetime_full)
      /         | Uploaded #{short_time_ago_in_words(@candidate.cv.added_event.performed_at)} ago
      /   .d-flex.justify-content-between
      /     .hstack.gap-2.mt-4
      /       .dropdown
      /         = render ButtonComponent.new(size: :small, type: :button, data: { bs_toggle: "dropdown" }) do |c|
      /           - c.with_icon("fa-light fa-chevron-down", position: :right)
      /           | Download CV
      /         ul.dropdown-menu
      /           li = link_to "PDF Document (.pdf)",
      /             download_cv_ats_candidate_path(@candidate, format: :pdf),
      /             class: "dropdown-item"
      /           li = link_to "Microsoft Word (.docx)",
      /             download_cv_ats_candidate_path(@candidate, format: :docx),
      /             class: "dropdown-item"
      /           - if @candidate.cv.present?
      /             li = link_to "Original file (#{File.extname(@candidate.cv.remote_file.file.path)})",
      /                          download_cv_ats_candidate_path(@candidate, format: :original),
      /                          class: "dropdown-item"
      /       = form_with model: FileEntry.new, url: create_cv_ats_candidate_file_entries_path,
      /                   local: true, multipart: true do |form|
      /         / This hidden field is required in order for the drag and drop to work.
      /         = form.hidden_field :person_id, value: @candidate.id, id: nil
      /         / On PC this button doesn't have a dropdown.

      /         = render ButtonComponent.new(size: :small,
      /                                      type: :button,
      /                                      hidden: true,
      /                                      class: "file-upload-button d-xl-inline-flex",
      /                                      data: { bs_toggle: "tooltip", title: drag_and_drop_tooltip })
      /           | Upload CV
      /           = form.file_field :cv,
      /                             accept: ".pdf,.doc,.docx,.odt,.rtf",
      /                             class: "upload turbo-instant-submit",
      /                             required: true,
      /                             data: confirmation_attributes

      /       / On mobile devices this button has a dropdown.
      /       .dropdown.d-md-none
      /         = render ButtonComponent.new(variant: :secondary,
      /                                      size: :small,
      /                                      data: { bs_toggle: "dropdown" }) do |c|
      /           - c.with_icon("fa-light fa-chevron-down", position: :right)
      /           | Upload CV
      /         ul.dropdown-menu
      /           li = form_with model: FileEntry.new, url: create_cv_ats_candidate_file_entries_path,
      /                          local: true, multipart: true do |form|
      /             = form.hidden_field :person_id, value: @candidate.id, id: nil
      /             .file-upload-button.dropdown-item
      /               span Upload CV
      /               = form.file_field :cv,
      /                 accept: ".pdf,.doc,.docx,.odt,.rtf",
      /                 class: "upload turbo-instant-submit ms-2",
      /                 required: true,
      /                 data: confirmation_attributes
      /           - if @candidate.cv.present?
      /             li = button_to "Remove CV", ats_file_entry_path(candidate_id: @candidate.id, id: @candidate.cv.id),
      /                            method: :delete, class: "dropdown-item",
      /                            data: delete_modal_data
      /           - else
      /             li = button_to "Create CV file", create_cv_file_ats_candidate_path(@candidate.id),
      /                            method: :post, class: "dropdown-item", data: confirmation_attributes
      /       - if @candidate.cv.present?
      /         / On PC this text is located to the right of buttons.
      /         .d-none.d-md-block [data-bs-toggle="tooltip"
      /             title=@candidate.cv.added_event.performed_at.to_fs(:datetime_full)]
      /           | Uploaded #{short_time_ago_in_words(@candidate.cv.added_event.performed_at)} ago
      /     .d-none.d-md-flex.flex-row.align-items-center.mt-4
      /       - if @candidate.cv.present?
      /         = button_to "Remove CV", ats_file_entry_path(candidate_id: @candidate.id, id: @candidate.cv.id),
      /                     method: :delete, class: "btn btn-outline-primary ms-2",
      /                     data: delete_modal_data
      /       - else
      /         = form_with url: create_cv_file_ats_candidate_path(@candidate.id)
      /           = render ButtonComponent.new(size: :small, data: confirmation_attributes)
      /             | Create CV file
      /   .mt-4.d-none.d-md-block
      /     = render "ats/file_entries/display_inline", file_entry: @candidate.cv
