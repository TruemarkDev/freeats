/# locals: (scorecard_template:)

ruby:
  submit_path =
    if scorecard_template.new_record?
      ats_scorecard_templates_path
    else
      ats_scorecard_template_path(scorecard_template)
    end

  cancel_path =
    if scorecard_template.new_record?
      ats_position_path(scorecard_template.position_stage.position_id)
    else
      ats_scorecard_template_path(scorecard_template)
    end

= form_with model: scorecard_template,
            url: submit_path,
            data: { turbo: false },
            local: true do |form|
  = form.hidden_field :position_stage_id, value: scorecard_template.position_stage_id
  = form.hidden_field :title, value: scorecard_template.title

  = render LabeledComponent.new(class: "mb-2",
                                left_layout_class: "col-12 col-md-auto",
                                right_layout_class: "col-12 col-md") do |c|
    - c.with_label("Name", size: :small, style: "min-width: 137px;",
                   form:, for_field: :title)
    = render TextInputComponent.new(form, method: :title, size: :small, required: true)

  = render LabeledComponent.new(class: "mb-2",
                                left_layout_class: "col-12 col-md-auto",
                                right_layout_class: "col-12 col-md d-flex align-items-center") do |c|
    - c.with_label("Visible to interviewer", size: :small, style: "min-width: 137px;",
                   form:, for_field: :visible_to_interviewer)
    - form.check_box :visible_to_interviewer, {}, "true", "false"

  .card
    .card-header
      .card-title.mb-0
        | Questions
    .card-body
      = render "questions_edit", questions: scorecard_template.scorecard_template_questions, form:

  .hstack.gap-2.mt-4
    = render ButtonComponent.new(size: :small)
      | Save
    = render ButtonLinkComponent.new(cancel_path, variant: :secondary, size: :small)
      | Cancel
