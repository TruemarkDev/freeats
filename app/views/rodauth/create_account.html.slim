ruby:
  if rodauth.field_error(rodauth.login_param) || rodauth.field_error("full_name") ||
       rodauth.field_error("company_name") || rodauth.field_error(rodauth.password_param) ||
       rodauth.field_error(rodauth.password_confirm_param)
    form_class = "was-validated"
  end
.authentication-container.mx-auto.card
  .card-body.p-4
    h1.mb-4
      = t("rodauth.create_account_page_title")
    = form_with url: rodauth.create_account_path, method: :post, data: { turbo: false }, class: form_class
      = render(TextInputComponent.new("full_name", placeholder: true, required: true,
          value: params["full_name"]))
      span.invalid-feedback
        = rodauth.field_error("full_name") || t("rodauth.required_field_error")

      = render(TextInputComponent.new("company_name", placeholder: true, required: true,
          value: params["company_name"], class: "mt-3"))
      span.invalid-feedback
        = rodauth.field_error("company_name") || t("rodauth.required_field_error")

      = render(TextInputComponent.new(rodauth.login_param, placeholder: t("rodauth.login_input_placeholder"),
          type: :email, autocomplete: "email", required: true, value: params[rodauth.login_param], class: "mt-3"))
      span.invalid-feedback
        = rodauth.field_error(rodauth.login_param) || t("rodauth.required_field_error")

      = render(TextInputComponent.new(rodauth.password_param, placeholder: t("rodauth.password_input_placeholder"),
          type: :password, autocomplete: rodauth.password_field_autocomplete_value, required: true, class: "mt-3"))
      span.invalid-feedback
        = rodauth.field_error(rodauth.password_param) || t("rodauth.required_field_error")

      = render(TextInputComponent.new(rodauth.password_confirm_param,
          placeholder: t("rodauth.confirm_password_input_placeholder"),
          type: :password, required: true, class: "mt-3"))
      span.invalid-feedback
        = rodauth.field_error(rodauth.password_confirm_param) || t("rodauth.required_field_error")

      .d-flex.mt-4
        = render(ButtonComponent.new(class: "col"))
          = t("rodauth.create_account_button")
    .mt-2
      => t("rodauth.create_account_page_text_before_sign_in_link")
      a href=rodauth.login_path
        = t("rodauth.email_auth_page_title")
